"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
__export(require('@ionic/cloud'));
var rxjs_1 = require('rxjs');
var core_1 = require('@angular/core');
var cloud_2 = require('@ionic/cloud');
var cloud_3 = require('@ionic/cloud');
var Rx = (function () {
    function Rx(emitter) {
        this.emitter = emitter;
    }
    return Rx;
}());
exports.Rx = Rx;
var PushRx = (function (_super) {
    __extends(PushRx, _super);
    function PushRx() {
        _super.apply(this, arguments);
    }
    PushRx.prototype.notification = function () {
        var _this = this;
        return rxjs_1.Observable.fromEventPattern(function (h) {
            return _this.emitter.on('push:notification', function (data) {
                return h(data.message);
            });
        }, function (_) {
            // https://github.com/ReactiveX/rxjs/issues/1900
            // this.emitter.off(signal);
        });
    };
    return PushRx;
}(Rx));
exports.PushRx = PushRx;
var Auth = (function (_super) {
    __extends(Auth, _super);
    function Auth() {
        _super.apply(this, arguments);
    }
    Auth = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Auth);
    return Auth;
}(cloud_3.Auth));
exports.Auth = Auth;
var Client = (function (_super) {
    __extends(Client, _super);
    function Client() {
        _super.apply(this, arguments);
    }
    Client = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Client);
    return Client;
}(cloud_3.Client));
exports.Client = Client;
var Config = (function (_super) {
    __extends(Config, _super);
    function Config() {
        _super.apply(this, arguments);
    }
    Config = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Config);
    return Config;
}(cloud_3.Config));
exports.Config = Config;
var Deploy = (function (_super) {
    __extends(Deploy, _super);
    function Deploy() {
        _super.apply(this, arguments);
    }
    Deploy = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Deploy);
    return Deploy;
}(cloud_3.Deploy));
exports.Deploy = Deploy;
var EventEmitter = (function (_super) {
    __extends(EventEmitter, _super);
    function EventEmitter() {
        _super.apply(this, arguments);
    }
    EventEmitter = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], EventEmitter);
    return EventEmitter;
}(cloud_3.EventEmitter));
exports.EventEmitter = EventEmitter;
var Insights = (function (_super) {
    __extends(Insights, _super);
    function Insights() {
        _super.apply(this, arguments);
    }
    Insights = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Insights);
    return Insights;
}(cloud_3.Insights));
exports.Insights = Insights;
var Push = (function (_super) {
    __extends(Push, _super);
    function Push() {
        _super.apply(this, arguments);
    }
    Push = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], Push);
    return Push;
}(cloud_3.Push));
exports.Push = Push;
var User = (function (_super) {
    __extends(User, _super);
    function User() {
        _super.apply(this, arguments);
    }
    User = __decorate([
        core_1.Injectable(), 
        __metadata('design:paramtypes', [])
    ], User);
    return User;
}(cloud_3.User));
exports.User = User;
exports.container = new cloud_2.DIContainer();
function buildPush() {
    var push = exports.container.push;
    push.rx = new PushRx(exports.container.eventEmitter);
    return push;
}
function provideCloud(settings) {
    var config = exports.container.config;
    config.register(settings);
    var core = exports.container.core;
    core.init();
    var cordova = exports.container.cordova;
    cordova.bootstrap();
    return [
        core_1.provide(Auth, { 'useFactory': function () { return exports.container.auth; } }),
        core_1.provide(Client, { 'useFactory': function () { return exports.container.client; } }),
        core_1.provide(Config, { 'useValue': config }),
        core_1.provide(Deploy, { 'useFactory': function () { return exports.container.deploy; } }),
        core_1.provide(EventEmitter, { 'useFactory': function () { return exports.container.eventEmitter; } }),
        core_1.provide(Push, { 'useFactory': buildPush }),
        core_1.provide(User, { 'useFactory': function () { return exports.container.singleUserService.current(); } })
    ];
}
exports.provideCloud = provideCloud;
